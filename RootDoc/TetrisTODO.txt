Environment
------------------------------------------------
1. Integrate Dependency framework
2. Provide environment initialization
3. Windows application support
4. Exception handler

------------------------------------------------
Windows application support
1. Message handling
2. Main loop object
3. Initialize viewport window

------------------------------------------------
Dependency injection container
2. Define environment objects as dependency services
3. Register dependency services
4. See "Provide environment for the application"

------------------------------------------------
Deployment
- Service registration function:
  1) Stores factory as static std::unique_ptr<Factory*>.
  2) Registers factory in the service container

------------------------------------------------

------------------------------------------------
Environment objects:
1. SpriteRender wrapper

Gameplay objects

------------------------------------------------
D3D subsystem:
1. Deploy

------------------------------------------------
QSpriteRender:
1. Refactors:
1.0. Substitute Initializer with QSpriteRenderSubsysInitializer (see @TODOs in the header file)
1.0.1. Initializer should NOT depend on other subsystems
1.0.2.
1.2. Resolves
2. Register factory
2.1. D3D11 Device object
2.2. Sprite Render object
3. Initialize service
4. Provide to environment