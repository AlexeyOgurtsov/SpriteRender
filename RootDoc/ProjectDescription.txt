Project description:
Sprite render.

Overall project description.
@TODO

Common architectural principals:
- Just make it work

Directories:
@TODO
2. Source - Source code directory;
2.1. Source/Projects - All project files (except the main);
3. Out - Contains ANY output (from compiler, from UnitTests, logs etc);
3.1. Out/Exe - all executible files
3.2. Out/Lib - generated .lib files to be stored here;
3.3. Out/Test - logs generated by the unit-test apps;
3.4. Out/Log - logs from all apps of the project;

Library modules:
@TODO

Application modules:
1. @TODO

Tools modules:
Source/Tools contains various tools (for example, to import 3D models). 

Third-party dependencies:
1. Boost 1.67

Testing:
1. Boost::unittest is used for unit testing;
2. Any submodule of module contains its own test project (e.g. tester for TVector must have its own tester project);
3. The unit-tester is to be automatically launched as a post-build step of the unit-test project;

Building:
Default repository path is considered to be C:/SpriteRender.
If this's not the case, you may need to set the paths in the visual studio projects.

Project-settings:
1. Maximal count of settings is to be set on the level of All configs/All platforms  of the project.
2. Use relative paths when setting up library and header paths

Common project dependencies:
1. Third-parties:
1.1. Boost

Project directories:
1. Always include the Source directory into the directory paths;

Project output:
1. Posfix debug libraries with _debug

Project compilation settings:
1. /std:c++latest to use the latest C++ features.